(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{321:function(a,t,r){"use strict";r.r(t);var s=r(13),e=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#多线程"}},[a._v("多线程")]),t("ul",[t("li",[t("a",{attrs:{href:"#_35-并行和并发有什么区别"}},[a._v("35. 并行和并发有什么区别？")])]),t("li",[t("a",{attrs:{href:"#_36-线程和进程的区别"}},[a._v("36. 线程和进程的区别？")])]),t("li",[t("a",{attrs:{href:"#_37-守护线程是什么"}},[a._v("37. 守护线程是什么？")])]),t("li",[t("a",{attrs:{href:"#_38-创建线程有哪几种方式"}},[a._v("38. 创建线程有哪几种方式？")])]),t("li",[t("a",{attrs:{href:"#_39-说一下-runnable-和-callable-有什么区别"}},[a._v("39. 说一下 runnable 和 callable 有什么区别？")])]),t("li",[t("a",{attrs:{href:"#_40-线程有哪些状态"}},[a._v("40. 线程有哪些状态？")])]),t("li",[t("a",{attrs:{href:"#_41-sleep-和-wait-有什么区别"}},[a._v("41. sleep() 和 wait() 有什么区别？")])]),t("li",[t("a",{attrs:{href:"#_42-notify-和-notifyall-有什么区别"}},[a._v("42. notify()和 notifyAll()有什么区别？")])]),t("li",[t("a",{attrs:{href:"#_43-线程的-run-和-start-有什么区别"}},[a._v("43. 线程的 run() 和 start() 有什么区别？")])]),t("li",[t("a",{attrs:{href:"#_44-创建线程池有哪几种方式"}},[a._v("44. 创建线程池有哪几种方式？")])]),t("li",[t("a",{attrs:{href:"#_45-线程池都有哪些状态"}},[a._v("45. 线程池都有哪些状态？")])]),t("li",[t("a",{attrs:{href:"#_46-线程池中-submit-和-execute-方法有什么区别"}},[a._v("46. 线程池中 submit() 和 execute() 方法有什么区别？")])]),t("li",[t("a",{attrs:{href:"#_47-在-java-程序中怎么保证多线程的运行安全"}},[a._v("47. 在 Java 程序中怎么保证多线程的运行安全？")])]),t("li",[t("a",{attrs:{href:"#_48-多线程中-synchronized-锁升级的原理是什么"}},[a._v("48. 多线程中 synchronized 锁升级的原理是什么？")])]),t("li",[t("a",{attrs:{href:"#_49-什么是死锁"}},[a._v("49. 什么是死锁？")])]),t("li",[t("a",{attrs:{href:"#_50-怎么防止死锁"}},[a._v("50. 怎么防止死锁？")])]),t("li",[t("a",{attrs:{href:"#_51-threadlocal-是什么-有哪些使用场景"}},[a._v("51. ThreadLocal 是什么？有哪些使用场景？")])]),t("li",[t("a",{attrs:{href:"#_52-说一下-synchronized-底层实现原理"}},[a._v("52. 说一下 synchronized 底层实现原理？")])]),t("li",[t("a",{attrs:{href:"#_53-synchronized-和-volatile-的区别是什么"}},[a._v("53. synchronized 和 volatile 的区别是什么？")])]),t("li",[t("a",{attrs:{href:"#_54-synchronized-和-lock-有什么区别"}},[a._v("54. synchronized 和 Lock 有什么区别？")])]),t("li",[t("a",{attrs:{href:"#_55-synchronized-和-reentrantlock-区别是什么"}},[a._v("55. synchronized 和 ReentrantLock 区别是什么？")])]),t("li",[t("a",{attrs:{href:"#_56-说一下-atomic-的原理"}},[a._v("56. 说一下 atomic 的原理？")])])])])])]),t("p"),a._v(" "),t("h2",{attrs:{id:"多线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[a._v("#")]),a._v(" 多线程")]),a._v(" "),t("h3",{attrs:{id:"_35-并行和并发有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_35-并行和并发有什么区别"}},[a._v("#")]),a._v(" 35. 并行和并发有什么区别？")]),a._v(" "),t("h3",{attrs:{id:"_36-线程和进程的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_36-线程和进程的区别"}},[a._v("#")]),a._v(" 36. 线程和进程的区别？")]),a._v(" "),t("h3",{attrs:{id:"_37-守护线程是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_37-守护线程是什么"}},[a._v("#")]),a._v(" 37. 守护线程是什么？")]),a._v(" "),t("h3",{attrs:{id:"_38-创建线程有哪几种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_38-创建线程有哪几种方式"}},[a._v("#")]),a._v(" 38. 创建线程有哪几种方式？")]),a._v(" "),t("h3",{attrs:{id:"_39-说一下-runnable-和-callable-有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_39-说一下-runnable-和-callable-有什么区别"}},[a._v("#")]),a._v(" 39. 说一下 runnable 和 callable 有什么区别？")]),a._v(" "),t("h3",{attrs:{id:"_40-线程有哪些状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_40-线程有哪些状态"}},[a._v("#")]),a._v(" 40. 线程有哪些状态？")]),a._v(" "),t("h3",{attrs:{id:"_41-sleep-和-wait-有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_41-sleep-和-wait-有什么区别"}},[a._v("#")]),a._v(" 41. sleep() 和 wait() 有什么区别？")]),a._v(" "),t("h3",{attrs:{id:"_42-notify-和-notifyall-有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_42-notify-和-notifyall-有什么区别"}},[a._v("#")]),a._v(" 42. notify()和 notifyAll()有什么区别？")]),a._v(" "),t("h3",{attrs:{id:"_43-线程的-run-和-start-有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_43-线程的-run-和-start-有什么区别"}},[a._v("#")]),a._v(" 43. 线程的 run() 和 start() 有什么区别？")]),a._v(" "),t("h3",{attrs:{id:"_44-创建线程池有哪几种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_44-创建线程池有哪几种方式"}},[a._v("#")]),a._v(" 44. 创建线程池有哪几种方式？")]),a._v(" "),t("h3",{attrs:{id:"_45-线程池都有哪些状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_45-线程池都有哪些状态"}},[a._v("#")]),a._v(" 45. 线程池都有哪些状态？")]),a._v(" "),t("h3",{attrs:{id:"_46-线程池中-submit-和-execute-方法有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_46-线程池中-submit-和-execute-方法有什么区别"}},[a._v("#")]),a._v(" 46. 线程池中 submit() 和 execute() 方法有什么区别？")]),a._v(" "),t("h3",{attrs:{id:"_47-在-java-程序中怎么保证多线程的运行安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_47-在-java-程序中怎么保证多线程的运行安全"}},[a._v("#")]),a._v(" 47. 在 Java 程序中怎么保证多线程的运行安全？")]),a._v(" "),t("h3",{attrs:{id:"_48-多线程中-synchronized-锁升级的原理是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_48-多线程中-synchronized-锁升级的原理是什么"}},[a._v("#")]),a._v(" 48. 多线程中 synchronized 锁升级的原理是什么？")]),a._v(" "),t("h3",{attrs:{id:"_49-什么是死锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_49-什么是死锁"}},[a._v("#")]),a._v(" 49. 什么是死锁？")]),a._v(" "),t("h3",{attrs:{id:"_50-怎么防止死锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_50-怎么防止死锁"}},[a._v("#")]),a._v(" 50. 怎么防止死锁？")]),a._v(" "),t("h3",{attrs:{id:"_51-threadlocal-是什么-有哪些使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_51-threadlocal-是什么-有哪些使用场景"}},[a._v("#")]),a._v(" 51. ThreadLocal 是什么？有哪些使用场景？")]),a._v(" "),t("h3",{attrs:{id:"_52-说一下-synchronized-底层实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_52-说一下-synchronized-底层实现原理"}},[a._v("#")]),a._v(" 52. 说一下 synchronized 底层实现原理？")]),a._v(" "),t("h3",{attrs:{id:"_53-synchronized-和-volatile-的区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_53-synchronized-和-volatile-的区别是什么"}},[a._v("#")]),a._v(" 53. synchronized 和 volatile 的区别是什么？")]),a._v(" "),t("h3",{attrs:{id:"_54-synchronized-和-lock-有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_54-synchronized-和-lock-有什么区别"}},[a._v("#")]),a._v(" 54. synchronized 和 Lock 有什么区别？")]),a._v(" "),t("h3",{attrs:{id:"_55-synchronized-和-reentrantlock-区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_55-synchronized-和-reentrantlock-区别是什么"}},[a._v("#")]),a._v(" 55. synchronized 和 ReentrantLock 区别是什么？")]),a._v(" "),t("h3",{attrs:{id:"_56-说一下-atomic-的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_56-说一下-atomic-的原理"}},[a._v("#")]),a._v(" 56. 说一下 atomic 的原理？")])])}),[],!1,null,null,null);t.default=e.exports}}]);