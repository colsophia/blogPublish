(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{309:function(e,v,_){"use strict";_.r(v);var r=_(13),t=Object(r.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"springmvc的执行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的执行流程"}},[e._v("#")]),e._v(" SpringMVC的执行流程")]),e._v(" "),v("p",[e._v("1）用户发送请求至前端控制器"),v("code",[e._v("DispatcherServlet")]),e._v("。")]),e._v(" "),v("p",[e._v("2）"),v("code",[e._v("DispatcherServlet")]),e._v("收到请求调用"),v("code",[e._v("HandlerMapping")]),e._v("处理器映射器。")]),e._v(" "),v("p",[e._v("3）处理器映射器找到具体的处理器(可以根据xml 配置、注解进行查找)，生成处理器对象及处理器拦截器(如果有则生成)一并返回给"),v("code",[e._v("DispatcherServlet")]),e._v("。")]),e._v(" "),v("p",[e._v("4）"),v("code",[e._v("DispatcherServlet")]),e._v("调用"),v("code",[e._v("HandlerAdapter")]),e._v(" 处理器适配器。")]),e._v(" "),v("p",[e._v("5）"),v("code",[e._v("HandlerAdapter")]),e._v(" 经过适配调用具体的处理器("),v("code",[e._v("Controller")]),e._v("，也叫后端控制器)。")]),e._v(" "),v("p",[e._v("6）"),v("code",[e._v("Controller")]),e._v(" 执行完成返回"),v("code",[e._v("ModelAndView")]),e._v("。")]),e._v(" "),v("p",[e._v("7）"),v("code",[e._v("HandlerAdapter")]),e._v(" 将"),v("code",[e._v("controller")]),e._v("执行结果 "),v("code",[e._v("ModelAndView")]),e._v("返回给"),v("code",[e._v("DispatcherServlet")]),e._v("。")]),e._v(" "),v("p",[e._v("8）"),v("code",[e._v("DispatcherServlet")]),e._v("将M"),v("code",[e._v("odelAndView")]),e._v("传给"),v("code",[e._v("ViewResolver")]),e._v("视图解析器。")]),e._v(" "),v("p",[e._v("9）"),v("code",[e._v("ViewResolver")]),e._v("解析后返回具体"),v("code",[e._v("View")]),e._v("。")]),e._v(" "),v("p",[e._v("10）"),v("code",[e._v("DispatcherServlet")]),e._v("根据"),v("code",[e._v("View")]),e._v(" 进行渲染视图（即将模型数据填充至视图中） 。")]),e._v(" "),v("p",[e._v("11）"),v("code",[e._v("DispatcherServlet")]),e._v("响应用户。")])])}),[],!1,null,null,null);v.default=t.exports}}]);